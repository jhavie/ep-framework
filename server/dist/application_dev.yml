dbClient:
  password: GCC #开发
spring:
  profiles.active: devTest
  application:
    name: framework_svc
  jpa:
    show-sql: true
    properties.hibernate:
      format_sql: true
#      dialect: org.hibernate.dialect.OracleDialect
      dialect: com.easipass.sys.config.MyOracleDialect
      temp.use_jdbc_metadata_defaults: false
  thymeleaf:
    cache: false  # 这个开发配置为false，避免改了模板还要重启服务器
    prefix: classpath:/view/   # 这个是配置模板路径的，默认就是templates，可不用配置
    check-template-location: false  # 这个可以不配置，检查模板位置
    suffix: .html
    encoding: UTF-8
    content-type: text/html
    mode: LEGACYHTML5
#    mode: HTML5   # 模板的模式
  redis.cluster.nodes: 192.168.129.181:10000,192.168.129.181:10002,192.168.129.181:10003,192.168.129.181:10004,192.168.129.181:10005,192.168.129.181:10006
  datasource:
    druid:
      url: jdbc:oracle:thin:@192.168.131.33:1521:epdev #开发
      username: GCC
      useGlobalDataSourceStat: true  # 合并多个DruidDataSource的监控数据
      driverClassName: oracle.jdbc.OracleDriver
      initialSize: 5
      minIdle: 5
      maxActive: 30
      maxWait: 60000   # 配置获取连接等待超时的时间
      timeBetweenEvictionRunsMillis: 60000  # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫F秒
      minEvictableIdleTimeMillis: 300000  # 配置一个连接在池中最小生存的时间，单位是毫秒
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      poolPreparedStatements: true  # 打开PSCache，并且指定每个连接上PSCache的大小
      maxPoolPreparedStatementPerConnectionSize: 30
      filters: stat,wall,config # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
  http:
    multipart:
      enabled: true
      max-file-size: 20MB #(文件上传时限制的文件大小)
      max-request-size: 20MB
server:
  port: 9091
#  contextPath: /${spring.application.name}/
logging:
  config: classpath:logback-${spring.profiles.active}.xml
# 应用配置
# 应用配置
settings:
  OauthSwitch: 1 #0关1开
  SignSwitch: 1
  CaptchaSwitch: 0
  druid:
    allow: 127.0.0.1
    deny: 192.168.12.66
    loginUsername: admin
    loginPassword: easipass
easipass:
  oauth:
    config:
      oauthUrl: http://192.168.131.201
      clientId: http://cloud.easipass.com/imgd/
      appCode: IMGD